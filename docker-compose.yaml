services:
  # webserver
  nginx:
    container_name: nginx
    build:
      context: ./nginx
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx/tools:/etc/nginx/ssl/
      - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf
      - nginx-volume:/var/log/nginx/
    depends_on:
      - front
    networks:
      - back-tier
      - front-tier
    restart: on-failure:3

    # frontend
  front:
    container_name: front
    build:
      context: ./front
    ports:
      - "5000:5000"
    volumes:
      - ./front:/app
    networks:
      - back-tier
      - front-tier


  # ELK stack
  elasticsearch:
    container_name: elastic
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.10
    environment:
      - "discovery.type=single-node"
    ports:
      - "9200:9200"
    networks:
      - back-tier
      - logging-tier
  logstash:
    container_name: logstash
    image: docker.elastic.co/logstash/logstash:7.17.10
    volumes:
      - ./elk/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - "5044:5044"
    networks:
      - back-tier
      - logging-tier
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.17.10
    ports:
      - "5601:5601"
    environment:
      - "ELASTICSEARCH_HOSTS=http://elasticsearch:9200"
    networks:
      - front-tier
      - logging-tier


  # Monitoring
  prometheus:
    container_name: prom
    image: prom/prometheus:v2.42.0
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/configs/prometheus.yml:/etc/prometheus/prometheus.yml
      - /home/${USER}/ft_transcendence/data/prometheus:/prometheus
    command:
      - '--web.enable-lifecycle'
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - back-tier
      - monitoring-tier
  grafana:
    container_name: grafana
    image: grafana/grafana:9.3.6
    ports:
      - "3000:3000"
    volumes:
      - grafana-volume:/var/lib/grafana
    networks:
      - front-tier
      - monitoring-tier

  nginx-exporter:
    container_name: nginx-exporter
    image: nginx/nginx-prometheus-exporter
    command: --nginx.scrape-uri=http://localhost:8080/nginx_status
    ports:
      - "9113:9113"
    networks:
      - back-tier
      - monitoring-tier

  node-exporter:
    container_name: node-exporter
    image: quay.io/prometheus/node-exporter:latest
    command:
      - '--path.rootfs=/host'
    network_mode: host
    pid: host
    volumes:
      - '/:/host:ro,rslave' 

volumes:
  db-volume:
    driver_opts:
      o: bind
      type: none
      device: /home/${USER}/ft_transcendence/data/postgresql

  nginx-volume:
    driver_opts:
      o: bind
      type: none
      device: /home/${USER}/ft_transcendence/data/nginx

  prometheus-volume:
    driver_opts:
      o: bind
      type: none
      device: /home/${USER}/ft_transcendence/data/prometheus

  grafana-volume:
    driver_opts:
      o: bind
      type: none
      device: /home/${USER}/ft_transcendence/data/grafana

networks:
  front-tier:
    driver: bridge
  back-tier:
    driver: bridge
  logging-tier:
    driver: bridge
  monitoring-tier:
    driver: bridge
